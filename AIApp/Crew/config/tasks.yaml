manager_task:
  description: >
    **OVERALL PROJECT COORDINATION:**
    - Receive and analyze the userâ€™s request in full detail.
    - Break down the requirements into specific tasks for different teams and tools.
    - Assign tasks to the UI/UX Team Leader to create a list of required components.
    - Ensure that all components needed for the page are accounted for.
    - If some components are missing, delegate creation of new components to appropriate tools.
    - Route tasks to Combiner and Aggregator agents for integration, validation, and analytics.
    - Track the progress of all tasks and ensure proper sequencing and coordination across teams.
    - Maintain smooth communication and ensure deliverables meet the requirements.
    Context: {user_prompt}
  expected_output: >
    - A detailed plan outlining tasks, dependencies, and timelines.
    - Assignment of tasks to UI/UX Team Leader and other specialist agents.
    - Verification process to ensure components are complete or need creation.
    - Clear next steps and priority areas for implementation.
  agent: manager_agent


uiux_team_leader_task:
  description: >
    **COMPONENT PLANNING:**
    - Identify all sections and elements needed for the page based on user requirements.
    - For typography, use the /snippets-project/Portfolio/Assets/css folder.
    - Make a list of the components needed for the page.
    - Focus on designing essential components such as:
      - Header/Navigation
      - Hero Section
      - About/Introduction Section
      - Features/Services Section
      - Skills/Expertise Section
      - Testimonials/Reviews Section
      - Contact Section
      - Footer
    
    **COLLABORATION:**
    - Work closely with the Manager to understand priorities.
    - Share updates on component availability and design recommendations.
    - Ensure that created or reused components align with the project's goals.
    - Provide a complete list of required components to the get_components_agent.

  expected_output: >
    - Complete list of required components with their specifications.
    - UI/UX design plan ensuring cohesive and interactive user experience.
    - Component requirements and design recommendations.
  agent: uiux_team_leader_agent


get_components_task:
  description: >
    **COMPONENT SEARCH:**
    - Search for components in the database using the Check Existing Components tool.
    - Use the get_existing_components tool to search for components based on the list provided by UI/UX Team Leader.
    - Check availability of each required component.
    
    **COMPONENT RETRIEVAL:**
    - Return a list of components with their details.
    - Identify which components are available and which need to be created.
    - Provide file paths for existing components.
    - Pass the list of missing components to the create_component_agent.

  expected_output: >
    - List of existing components with their file paths.
    - List of missing components that need to be created.
    - Component availability report.
  agent: get_components_agent


create_component_task:
  description: >
    **COMPONENT CREATION:**
    - Create new components in HTML/CSS/JS using the Create New Component tool.
    - Use the create_new_component tool to create missing components.
    - Focus on components identified as missing by the get_components_agent.
    
    **COMPONENT DEVELOPMENT:**
    - Develop components in HTML/CSS/JS using the Create New Component tool.
    - Use Html, Css, Tailwind and Javascript to create the components.
    - At most 5 components should be created at a time.
    - Ensure all components are created and file paths are collected.

  expected_output: >
    - Newly created components with their file paths.
    - Complete list of all component file paths (existing and newly created).
    - Components ready for integration.
  agent: create_component_agent


combiner_task:
  description: >
    **INTEGRATION WORKFLOW:**
    - Assemble existing components provided by the get_components_agent.
    - Integrate newly generated components from the create_component_agent.
    - Ensure smooth interaction between all components.
    - Validate the structure, functionality, and design cohesion.
    
    **CONFLICT RESOLUTION:**
    - Identify and resolve compatibility issues between components.
    - Standardize naming, styling, and data structures for consistent integration.
    
    **TESTING & OPTIMIZATION:**
    - Verify that the combined components work flawlessly.
    - Optimize for performance, responsiveness, and scalability.
    - Use the combine_components tool to merge all individual HTML components into a single complete HTML page.
    - Ensure proper HTML structure with DOCTYPE, head, and body tags.
    - Use Html, Css, Tailwind and Javascript to combine the components.

  expected_output: >
    - Complete HTML page with all components properly integrated.
    - File path to the combined HTML page.
    - HTML content ready for final review and saving.
    - Integration report with optimization recommendations.
  agent: combiner_agent